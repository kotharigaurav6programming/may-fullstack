Token : Token is the smallest unit of information.
-----
Token includes : 
--------------
a. Constant
b. Variable
c. Keywords
d. Identifier
e. Seperator
f. Operator

a. Constant : Constant is an entity whose value cannot be changed during the execution of program. Here we use const keyword to define a constant.

b. Variable : Variable is the name given to a memory location, whose value may change during the execution of program. Here we use var(function scopic) and let(block scopic) to define a variable.

c. Keyword : Keywords are reserved words,Whose meaning is already defined. We cannot use keywords as a variable name. 

d. Identifier : Userdefined names
   variable : lowercase (small letters)
   constant : uppercase (capital letters)
   cases : 
        camel case :   addProduct, addProductCategory
        pascal case : AddProduct, AddProductCategory
        snake case : add_product, add_product_category
        habib case :  add-product, add-product-category

e. Separator : ,  ;  {}  ()  []

f. Operator : Operators are the symbols which are used to perform some operations on one or more than one operand(variable and constant). 
example : x+y, 5+3, x+3 etc

Types of operator : 
    1. Assignment Operator (=)
    2. Arithmetic Operator (+,-,*,/,%,**) here ** is exponential operator
       5 ** 2 = 25 
    3. Relational operator (>,<,>=,<=,==,===,!=,!==)
    4. Arithmetic Assignment operator | Shorthand operator | Compound operator
       (+= -= *= /= %=)
    5. Conditional operator | Ternary operator ( ? : )
       condition ? expression 1 : expression 2 ;
         | |_____true____|              | 
         |__________________false_______|
    6. Logical operator 
        |-- logical and(&&)
        |-- logical or(||)
        |-- logical not(!)
    7. Bitwise operator
        |-- Bitwise And(&)    
        |-- Bitwise Or(|)    
        |-- Bitwise Left shift(<<)    
        |-- Bitwise Right shift(>>)    
        |-- Bitwise XOR(^)    
        |-- Bitwise Complement(~) 
            ~n = -(n+1)
            n=10
            ~n = -(10+1) = -11
    8. Increment | Decrement Operator
        |-- Increment (++)
                |-- Post Increment
                    print(use)------>Increment
                |-- Pre Increment
                    Increment------->print(use)
        |-- Decrement (--)  
                |-- Post Decrement
                    print(use)------>Decrement
                |-- Pre Decrement
                    Decrement------->print(use)
