1. show dbs;
2. use codingdb;
3. db.dropDatabase();
4. db.createCollection("Employee");
5. db.createCollection("EmployeeNew");
6. show collections;
7. db.EmployeeNew.drop();
8. db.Employee.insert({
    name:'Andrew Anderson',
    age:45,
    salary:25000,
    address : 'India'
});
9. db.Employee.insertOne({
    name:'Peter Parker',
    age:55,
    salary:35000,
    address : 'USA'
});
10. db.Employee.insertMany([{
    name:'Mathew Math',
    age:65,
    salary:15000,
    address : 'Australia'
},{
    name:'Jack Jackson',
    age:75,
    salary:5000,
    address : 'America'
},{
    name:'Kimpson Knight',
    age:65,
    salary:15000,
    address : 'West Indies'
}]);
11. db.Employee.find();
12. db.Employee.find().pretty();
13. db.Employee.bulkWrite([{
    insertOne:{
            name:'Mathew Math',
            age:65,
            salary:15000,
            address : 'Australia'
        }
    }]);
14. db.Employee.find({name:'Andrew Anderson'});
15. db.Employee.find({name:'Mathew Math'});
16. db.Employee.find({name:'Mathew Math',age:65});
17. db.Employee.update({
        name:'Mathew Math'
    },{
        $set:{
            age:23
        }
    });
18. db.Employee.update({
    name:'Mathew Math'
},{
    $set:{
        salary:18000
    }
},{multi:true});

19. db.Employee.updateMany({
    name:'Mathew Math'
},{
    $set:{
        address:'USA'
    }
});

20. db.Employee.update({},{$set:{pincode:452010}});
21. db.Employee.update({name:'Peter Parker'},{$set:{pincode:452010}});
22. db.Employee.update({},{$set:{pincode:452010}},{multi:true});
23. db.Employee.updateMany({},{$set:{stdcode:0731}});
24. db.Employee.updateMany({},{$set:{stdcode:"0731"}});
25. db.Employee.updateMany({},{$unset:{stdcode:"0731"}});
26. db.Employee.remove({name:'Mathew Math',age:23});
27. db.Employee.find({},{_id:0});
28. db.Employee.find({},{_id:0,name:0,salary:0});
29. db.Employee.find({
        salary : {
            $gt : 50000
        }
    });
30. db.Employee.find({salary:{$eq:25000}});
31. db.Employee.find({salary:{$lte:25000}});
32. db.Employee.find({salary:{$in:[25000]}});
33. db.Employee.find({salary:{$in:[25000,18000]}});
34. db.Employee.find({salary:{$nin:[25000,18000]}});
35. db.Employee.find({
        $or:[
            {
                age:65
            },{
                address:'New York'
            }
        ]
    });

    db.Employee.find({
        $and:[
            {
                age:65
            },{
                address:'New York'
            }
        ]
    });

    db.Employee.find({
        $nor:[
            {
                age:65
            },{
                address:'USA'
            }
        ]
    });

    db.Employee.find({
        $and : [
            {
                age : {
                    $gt : 60
                }
            },{
                $and:[
                    {
                        salary : {
                            $gte:5000
                        }
                    },{
                        address : "America"
                    }
                ]
            }
        ]
    });

    db.Employee.find({ age : {$not: { $eq: 65 }}});
     
36. db.Employee.find()[0];
    db.Employee.find()[2];
    db.Employee.find()[3];
    
    db.Employee.find().count();
    db.Employee.find().limit(3);
    db.Employee.find().skip(2);

37. db.Employee.find().sort({name:1});  
    db.Employee.find().sort({name:-1});
    db.Employee.find().sort({age:1,address:-1});

38. db.Employee.find().sort({salary:-1}).toArray()[0];

    // name of highest salary person
39. db.Employee.find().sort({salary:-1}).toArray()[0].name;

    // second highest salary
40. db.Employee.find({
    salary : {
        $ne : db.Employee.find().sort({salary:-1}).toArray()[0].salary
    }
}).sort({salary:-1}).toArray()[0].salary;

// second highest salary person name
41. db.Employee.find({
    salary : {
        $ne : db.Employee.find().sort({salary:-1}).toArray()[0].salary
    }
}).sort({salary:-1}).toArray()[0].name;

42. db.Employee.find({
    salary : {
        $lt : db.Employee.find({
            salary : {
                $ne : db.Employee.find().sort({salary:-1}).toArray()[0].salary
            }
        }).sort({salary:-1}).toArray()[0].salary
    }
}).sort({salary:-1}).toArray()[0].salary;

43. db.Employee.aggregate([{
    $group:{
        _id:"$name"
    }
}]);

44. db.Employee.aggregate([{ 
    $group: 
        { 
            _id: "$name",
            total_entries:{$sum:1} 
        } 
    }]);

    db.Employee.aggregate([{ 
        $group: 
            { 
                _id: "$age",
                total_entries:{$sum:1} 
            } 
        }]);

    db.Employee.aggregate([{ 
        $group: 
            { 
                _id: "",
                max_age:{$max:"$age"} 
            } 
        }]);

    db.Employee.aggregate([{ 
        $group: 
            { 
                _id: "",
                min_age:{$min:"$age"} 
            } 
        }]);

    db.Employee.aggregate([{ 
        $group: 
            { 
                _id: "",
                avg_age:{$avg:"$age"} 
            } 
        }]);

    db.Employee.aggregate([{ 
        $group: 
            { 
                _id: "",
                sum_age:{$sum:"$age"} 
            } 
        }]);
        
45. db.Employee.insertOne({name:'abc',shirts:['small','medium','large']});
    db.Employee.aggregate([{
        $unwind:"$shirts"
    }]);    

46. db.Employee.aggregate([{
    $group:{
        _id:"$name"
    }
}]);    

47. db.Employee.aggregate([{
    $group:{
        _id:"",
        name:{$first:"$name"}
    }
}]);    

48. db.Employee.aggregate([{
    $group:{
        _id:"",
        name:{$last:"$name"}
    }
}]);    

49. db.Employee.aggregate([{ $group: { _id: "$name" } }, { $limit:2 }] );
50. db.Employee.aggregate([{ $group: { _id: "$name" } }, { $skip:2 }] );
51. db.Employee.aggregate([{ $group: { _id: "$name" } }, { $sort:{_id:1} }] );
52. db.Employee.aggregate([{ $group: { _id: "$name" } }, { $sort:{_id:-1} }] );
53. db.Employee.aggregate([{
    $group:{
        _id:"$name",
        age:{$sum:"$age"} ,
        salary:{$sum:"$salary"}
    }
}]);    

54. db.Employee.insertOne({name:'Jack Jackson',salary:55000});

55. db.Employee.aggregate([{
    $group:{
        _id:"",
        age:{$sum:"$age"} ,
        salary:{$sum:"$salary"}
    }
}]);    

56. db.Employee.aggregate([{
    $group:{
        _id:"$name",
        age:{$sum:"$age"} ,
        salary:{$sum:"$salary"}
    }
},{
    $project:{
        age:1,
        _id:0
    }
}]);    

57. db.createCollection("product");
58. db.createCollection("category");
59. db.product.insertMany([
        {
            name:"fan",
            price:15000,
            product_id:'PROD001',
            category_id:100
        },{
            name:"fairness cream",
            price:18000,
            product_id:'PROD002',
            category_id:200
        },{
            name:"rice",
            price:13000,
            product_id:'PROD002',
            category_id:300
        }
    ]);

60. db.category.insertMany([
        {
            name:"Electronics",
            cat_id:100
        },
        {
            name:"Cosmatics",
            cat_id:200
        }
    ]);

61. db.product.aggregate([
        {
            $lookup:{
                from : "category",
                foreignField:"cat_id",
                localField:"category_id",
                as : "Product Details"
            }
        }
    ]);

62. db.product.aggregate([
        {
            $lookup:{
                from : "category",
                foreignField:"cat_id",
                localField:"category_id",
                as : "Product Details"
            }
        },{
            $match:{
                price:{
                    $gte:15000
                }
            }
        }
    ]);

63. db.Employee.getIndexes();
64. db.Employee.createIndex({age:1});
65. db.Employee.insertOne({age:1},{expireAt:new Date()});    // needs to explore
66. db.Employee.createIndex({age:1},{expireAfterSeconds : 15}); // needs to explore
